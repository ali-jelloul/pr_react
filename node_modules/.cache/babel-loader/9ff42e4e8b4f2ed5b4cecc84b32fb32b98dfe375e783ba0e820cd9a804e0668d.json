{"ast":null,"code":"import{connect,useDispatch,useSelector}from\"react-redux\";import{CounterSelecteur}from\"./counterSelecteur\";import{action_Decrement,action_Increment,action_Reset}from\"./counteraction\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function Counter(_ref){let{Increment,Decrement,Reset,selecteur}=_ref;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:selecteur}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:Increment,children:\"Increment\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:Decrement,children:\"Decrement\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:Reset,children:\"Reset\"})]})});};/*\r\nconst mapStateToProps = (state) => ({\r\n  counter: CounterSelecteur(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n    onIncrement: value => dispatch(action_Increment()),\r\n    onDecrement: value => dispatch(action_Decrement()),\r\n    onReset: value => dispatch(action_Reset()),\r\n  });\r\n  \r\nexport const CounterStore = connect(mapStateToProps,mapDispatchToProps)(Counter)\r\n  \r\n*/export default function CounterStore(){const dispatch=useDispatch();const selecteur=useSelector(CounterSelecteur);const Increment=()=>{dispatch(action_Increment());};const Decrement=()=>{dispatch(action_Decrement());};const Reset=()=>{dispatch(action_Reset());};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Counter,{onIncrement:Increment,onDecrement:Decrement,onReset:Reset,onselecteur:selecteur})});}","map":{"version":3,"names":["connect","useDispatch","useSelector","CounterSelecteur","action_Decrement","action_Increment","action_Reset","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Counter","_ref","Increment","Decrement","Reset","selecteur","children","type","className","onClick","CounterStore","dispatch","onIncrement","onDecrement","onReset","onselecteur"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/Rdux/counter.jsx"],"sourcesContent":["\r\nimport { connect, useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { CounterSelecteur } from \"./counterSelecteur\"\r\nimport { action_Decrement, action_Increment, action_Reset } from \"./counteraction\"\r\n\r\nexport  function Counter({Increment ,Decrement , Reset ,selecteur}){\r\n\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n            <span>{selecteur}</span>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={Increment}>Increment</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={Decrement}>Decrement</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={Reset}>Reset</button>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n/*\r\nconst mapStateToProps = (state) => ({\r\n  counter: CounterSelecteur(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n    onIncrement: value => dispatch(action_Increment()),\r\n    onDecrement: value => dispatch(action_Decrement()),\r\n    onReset: value => dispatch(action_Reset()),\r\n  });\r\n  \r\nexport const CounterStore = connect(mapStateToProps,mapDispatchToProps)(Counter)\r\n  \r\n*/\r\n\r\nexport default function CounterStore(){\r\n  const dispatch = useDispatch()\r\n  const selecteur = useSelector(CounterSelecteur)\r\n  \r\n  \r\n  const Increment = ()=> { dispatch(action_Increment())}\r\n      \r\n  const Decrement  = ()=>   {dispatch(action_Decrement())}\r\n      \r\n  const Reset = ()=> {dispatch(action_Reset())}\r\n    \r\n  return(\r\n    <>\r\n    <Counter onIncrement={Increment} onDecrement={Decrement}  onReset={Reset} onselecteur={selecteur} />\r\n    </>\r\n  )\r\n}"],"mappings":"AACA,OAASA,OAAO,CAAEC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAE/D,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,gBAAgB,CAAEC,gBAAgB,CAAEC,YAAY,KAAQ,iBAAiB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAElF,MAAQ,SAAS,CAAAC,OAAOA,CAAAC,IAAA,CAA2C,IAA1C,CAACC,SAAS,CAAEC,SAAS,CAAGC,KAAK,CAAEC,SAAS,CAAC,CAAAJ,IAAA,CAG9D,mBACIN,IAAA,CAAAI,SAAA,EAAAO,QAAA,cACAT,KAAA,QAAAS,QAAA,eACIX,IAAA,SAAAW,QAAA,CAAOD,SAAS,CAAO,CAAC,cACxBV,IAAA,WAAQY,IAAI,CAAC,QAAQ,CAACC,SAAS,CAAC,iBAAiB,CAACC,OAAO,CAAEP,SAAU,CAAAI,QAAA,CAAC,WAAS,CAAQ,CAAC,cACxFX,IAAA,WAAQY,IAAI,CAAC,QAAQ,CAACC,SAAS,CAAC,iBAAiB,CAACC,OAAO,CAAEN,SAAU,CAAAG,QAAA,CAAC,WAAS,CAAQ,CAAC,cACxFX,IAAA,WAAQY,IAAI,CAAC,QAAQ,CAACC,SAAS,CAAC,iBAAiB,CAACC,OAAO,CAAEL,KAAM,CAAAE,QAAA,CAAC,OAAK,CAAQ,CAAC,EAC/E,CAAC,CACJ,CAAC,CAEX,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,cAAe,SAAS,CAAAI,YAAYA,CAAA,CAAE,CACpC,KAAM,CAAAC,QAAQ,CAAGvB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAiB,SAAS,CAAGhB,WAAW,CAACC,gBAAgB,CAAC,CAG/C,KAAM,CAAAY,SAAS,CAAGA,CAAA,GAAK,CAAES,QAAQ,CAACnB,gBAAgB,CAAC,CAAC,CAAC,EAAC,CAEtD,KAAM,CAAAW,SAAS,CAAIA,CAAA,GAAO,CAACQ,QAAQ,CAACpB,gBAAgB,CAAC,CAAC,CAAC,EAAC,CAExD,KAAM,CAAAa,KAAK,CAAGA,CAAA,GAAK,CAACO,QAAQ,CAAClB,YAAY,CAAC,CAAC,CAAC,EAAC,CAE7C,mBACEE,IAAA,CAAAI,SAAA,EAAAO,QAAA,cACAX,IAAA,CAACK,OAAO,EAACY,WAAW,CAAEV,SAAU,CAACW,WAAW,CAAEV,SAAU,CAAEW,OAAO,CAAEV,KAAM,CAACW,WAAW,CAAEV,SAAU,CAAE,CAAC,CAClG,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}