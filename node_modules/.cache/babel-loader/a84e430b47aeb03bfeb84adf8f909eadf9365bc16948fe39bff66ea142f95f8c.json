{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\OneDrive - JELLOUL\\\\Desktop\\\\React\\\\pr_React\\\\projet_react\\\\src\\\\partie1\\\\p9.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Test9() {\n  _s();\n  const [count, setcount] = useState(Date);\n  useEffect(() => {\n    console.log(\"componentDidmount\");\n  }, []);\n  useEffect(() => {\n    console.log(\"componentDidrender\");\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      console.log(\"componentDidUpdate\");\n      setCount(new Date());\n    }, 900); // This sets the interval to run every 900ms\n\n    // Cleanup function to clear the interval\n    return () => clearInterval(intervalId);\n  }, []); // No need to add 'count' in the dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [count.toString(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: useEffect(),\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Test9, \"7/hg71pl9Ahe8hPKEZajXKDpb/g=\");\n_c = Test9;\nvar _c;\n$RefreshReg$(_c, \"Test9\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Test9","_s","count","setcount","Date","console","log","intervalId","setInterval","setCount","clearInterval","children","toString","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/partie1/p9.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Test9(){\r\n\r\n    const [count , setcount]=useState(Date)\r\n\r\n    useEffect(()=>{\r\n        console.log(\"componentDidmount\")\r\n    },[]\r\n    )\r\n\r\n    useEffect(()=>{\r\n        console.log(\"componentDidrender\")\r\n    }\r\n    ) \r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n        console.log(\"componentDidUpdate\");\r\n        setCount(new Date());\r\n    }, 900); // This sets the interval to run every 900ms\r\n\r\n    // Cleanup function to clear the interval\r\n    return () => clearInterval(intervalId);\r\n}, []); // No need to add 'count' in the dependency array\r\n\r\n\r\n    return(\r\n       <>\r\n        {count.toString()}\r\n        <button onClick={useEffect()}>\r\n            click\r\n        </button>\r\n       </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAE3B,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAACR,QAAQ,CAACS,IAAI,CAAC;EAEvCV,SAAS,CAAC,MAAI;IACVW,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC,CAAC,EAAC,EACF,CAAC;EAEDZ,SAAS,CAAC,MAAI;IACVW,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CACA,CAAC;EAEHZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCG,QAAQ,CAAC,IAAIL,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET;IACA,OAAO,MAAMM,aAAa,CAACH,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGJ,oBACGV,OAAA,CAAAE,SAAA;IAAAY,QAAA,GACET,KAAK,CAACU,QAAQ,CAAC,CAAC,eACjBf,OAAA;MAAQgB,OAAO,EAAEnB,SAAS,CAAC,CAAE;MAAAiB,QAAA,EAAC;IAE9B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACR,CAAC;AAEV;AAAChB,EAAA,CAjCuBD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}