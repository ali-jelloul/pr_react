{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nexport const UseFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return data;\n};\n_s(UseFetch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = UseFetch;\nvar _c;\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"names":["React","useEffect","useState","UseFetch","url","_s","data","setData","fetchData","response","fetch","result","json","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/Custom Hooks/useFetch.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const UseFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return data;\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;QACjC,MAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpCL,OAAO,CAACI,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,GAAG,CAAC,CAAC;EAET,OAAOE,IAAI;AACb,CAAC;AAACD,EAAA,CAlBWF,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}