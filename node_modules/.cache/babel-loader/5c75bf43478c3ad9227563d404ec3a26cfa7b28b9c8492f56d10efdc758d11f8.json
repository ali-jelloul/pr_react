{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { UsersContext } from \"./apk\"; // Assurez-vous d'importer correctement le contexte\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Delete() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const context = useContext(UsersContext); // Utilisation du contexte\n  const [deleteuser, setDeleteUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Chercher l'utilisateur par ID dans le contexte\n    const user = context.usersd.find(user => user.id === parseInt(id));\n    if (user) {\n      console.log(\"test user de delete \", user);\n      setDeleteUser(user);\n      alert(`User with ID: ${id} would be deleted here.`);\n      // Pas de mise à jour du contexte ici\n      context.deleteuser(parseInt(id));\n      navigate(\"/users/Read\");\n    } else {\n      console.log(\"User not found\");\n    }\n  }, [id, context]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Delete, \"ttw3whQJYVMyR6Uxw2hMUsOrEo0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Delete;\nvar _c;\n$RefreshReg$(_c, \"Delete\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","useParams","UsersContext","Fragment","_Fragment","jsxDEV","_jsxDEV","Delete","_s","id","context","deleteuser","setDeleteUser","navigate","user","usersd","find","parseInt","console","log","alert","_c","$RefreshReg$"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/CRUD/delete.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { UsersContext } from \"./apk\"; // Assurez-vous d'importer correctement le contexte\r\n\r\nexport default function Delete() {\r\n  const { id } = useParams();\r\n  const context = useContext(UsersContext);  // Utilisation du contexte\r\n  const [deleteuser, setDeleteUser] = useState(null);\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    // Chercher l'utilisateur par ID dans le contexte\r\n    const user = context.usersd.find((user) => user.id === parseInt(id));\r\n\r\n    if (user) {\r\n        console.log(\"test user de delete \" , user)\r\n      setDeleteUser(user);\r\n      alert(`User with ID: ${id} would be deleted here.`);\r\n      // Pas de mise à jour du contexte ici\r\n      context.deleteuser(parseInt(id));\r\n      navigate(\"/users/Read\")\r\n    } else {\r\n      console.log(\"User not found\");\r\n    }\r\n  }, [id, context]);\r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,YAAY,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,OAAO,GAAGX,UAAU,CAACG,YAAY,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,IAAI,GAAGJ,OAAO,CAACK,MAAM,CAACC,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKQ,QAAQ,CAACR,EAAE,CAAC,CAAC;IAEpE,IAAIK,IAAI,EAAE;MACNI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAGL,IAAI,CAAC;MAC5CF,aAAa,CAACE,IAAI,CAAC;MACnBM,KAAK,CAAC,iBAAiBX,EAAE,yBAAyB,CAAC;MACnD;MACAC,OAAO,CAACC,UAAU,CAACM,QAAQ,CAACR,EAAE,CAAC,CAAC;MAChCI,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM;MACLK,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC,EAAE,CAACV,EAAE,EAAEC,OAAO,CAAC,CAAC;EAGjB,oBACEJ,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP;AAACI,EAAA,CA5BuBD,MAAM;EAAA,QACbN,SAAS,EAGPD,WAAW;AAAA;AAAAqB,EAAA,GAJNd,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}