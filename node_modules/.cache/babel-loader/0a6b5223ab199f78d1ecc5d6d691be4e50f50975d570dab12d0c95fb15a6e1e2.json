{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\OneDrive - JELLOUL\\\\Desktop\\\\React\\\\pr_React\\\\projet_react\\\\src\\\\Rdux\\\\counter.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CounterSelecteur } from \"./counterSelecteur\";\nimport { action_Decrement, action_Increment, action_Reset } from \"./counteraction\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Counter() {\n  _s();\n  const dispatch = useDispatch();\n  const value = useSelector(CounterSelecteur); // Selectionne la valeur actuelle du compteur\n\n  const handleIncrement = () => {\n    dispatch(action_Increment(1)); // Appelle l'action avec une valeur (par exemple +1)\n  };\n  const handleDecrement = () => {\n    dispatch(action_Decrement(1)); // Appelle l'action avec une valeur (par exemple -1)\n  };\n  const handleReset = () => {\n    dispatch(action_Reset()); // Appelle l'action reset sans payload\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleIncrement,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleDecrement,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// Pas besoin de connect ici car nous utilisons des hooks Redux\n\n/*\r\nconst mapStateToProps = (state) => ({\r\n  counter: CounterSelecteur(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n    onIncrement: value => dispatch(action_Increment()),\r\n    onDecrement: value => dispatch(action_Decrement()),\r\n    onReset: value => dispatch(action_Reset()),\r\n  });\r\n  \r\nexport const CounterStore = connect(mapStateToProps,mapDispatchToProps)(Counter)\r\n  \r\n*/\n_s(Counter, \"/A0nvjtmbwxG53osG7wkI0yjlGA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useDispatch","useSelector","CounterSelecteur","action_Decrement","action_Increment","action_Reset","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","dispatch","value","handleIncrement","handleDecrement","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/Rdux/counter.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { CounterSelecteur } from \"./counterSelecteur\"; \r\nimport { action_Decrement, action_Increment, action_Reset } from \"./counteraction\";\r\n\r\nexport default function Counter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(CounterSelecteur); // Selectionne la valeur actuelle du compteur\r\n\r\n  const handleIncrement = () => {\r\n    dispatch(action_Increment(1)); // Appelle l'action avec une valeur (par exemple +1)\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    dispatch(action_Decrement(1)); // Appelle l'action avec une valeur (par exemple -1)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    dispatch(action_Reset()); // Appelle l'action reset sans payload\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <span>{value}</span>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleIncrement}>Increment</button>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleDecrement}>Decrement</button>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleReset}>Reset</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Pas besoin de connect ici car nous utilisons des hooks Redux\r\n\r\n/*\r\nconst mapStateToProps = (state) => ({\r\n  counter: CounterSelecteur(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n    onIncrement: value => dispatch(action_Increment()),\r\n    onDecrement: value => dispatch(action_Decrement()),\r\n    onReset: value => dispatch(action_Reset()),\r\n  });\r\n  \r\nexport const CounterStore = connect(mapStateToProps,mapDispatchToProps)(Counter)\r\n  \r\n*/\r\n\r\n  "],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,gBAAgB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnF,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAACC,gBAAgB,CAAC,CAAC,CAAC;;EAE7C,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BF,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BH,QAAQ,CAACT,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBJ,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAOJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBd,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEV,eAAgB;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Fd,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAET,eAAgB;QAAAE,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9Fd,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAER,WAAY;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC,gBACN,CAAC;AAEP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbAV,EAAA,CA9BwBD,OAAO;EAAA,QACZV,WAAW,EACdC,WAAW;AAAA;AAAAwB,EAAA,GAFHf,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}