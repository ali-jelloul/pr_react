{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\OneDrive - JELLOUL\\\\Desktop\\\\React\\\\pr_React\\\\projet_react\\\\src\\\\Rdux\\\\counter.jsx\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Counter({\n  counter\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: Increment,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: Decrement,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n// Map Redux state to component props\n_c = Counter;\nconst mapStateToProps = state => ({\n  counter: state.value\n});\n\n// Map dispatch functions to component props\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: () => dispatch({\n    type: \"counter/increment\"\n  }),\n  onDecrement: () => dispatch({\n    type: \"counter/decrement\"\n  })\n});\n\n// Connect the Counter component with Redux store and export it \nexport const CounterStore = connect(mapStateToProps, mapDispatchToProps)(Counter);\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["type","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","Increment","Decrement","_c","mapStateToProps","state","value","mapDispatchToProps","dispatch","onIncrement","onDecrement","CounterStore","$RefreshReg$"],"sources":["C:/Users/Ali/OneDrive - JELLOUL/Desktop/React/pr_React/projet_react/src/Rdux/counter.jsx"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\"\r\nimport { connect } from \"react-redux\"\r\n\r\nexport default function Counter({counter}){\r\n\r\n   \r\n    return(\r\n        <>\r\n        <div>\r\n            <span>{counter}</span>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={Increment}>Increment</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={Decrement}>Decrement</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// Map Redux state to component props\r\nconst mapStateToProps = (state) => ({\r\n    counter: state.value,\r\n   });\r\n   \r\n   // Map dispatch functions to component props\r\n   const mapDispatchToProps = (dispatch) => ({\r\n    onIncrement: () => dispatch({ type: \"counter/increment\" }),\r\n    onDecrement: () => dispatch({ type: \"counter/decrement\" }),\r\n   });\r\n   \r\n   // Connect the Counter component with Redux store and export it \r\n   export const CounterStore = connect(mapStateToProps, mapDispatchToProps)(Counter);"],"mappings":";AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,SAASC,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,OAAOA,CAAC;EAACC;AAAO,CAAC,EAAC;EAGtC,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACAL,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAAOD;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBT,OAAA;QAAQH,IAAI,EAAC,QAAQ;QAACa,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEC,SAAU;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxFT,OAAA;QAAQH,IAAI,EAAC,QAAQ;QAACa,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEE,SAAU;QAAAR,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC,gBACJ,CAAC;AAEX;;AAGA;AAAAK,EAAA,GAfwBX,OAAO;AAgB/B,MAAMY,eAAe,GAAIC,KAAK,KAAM;EAChCZ,OAAO,EAAEY,KAAK,CAACC;AAChB,CAAC,CAAC;;AAEF;AACA,MAAMC,kBAAkB,GAAIC,QAAQ,KAAM;EACzCC,WAAW,EAAEA,CAAA,KAAMD,QAAQ,CAAC;IAAEtB,IAAI,EAAE;EAAoB,CAAC,CAAC;EAC1DwB,WAAW,EAAEA,CAAA,KAAMF,QAAQ,CAAC;IAAEtB,IAAI,EAAE;EAAoB,CAAC;AAC1D,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMyB,YAAY,GAAGxB,OAAO,CAACiB,eAAe,EAAEG,kBAAkB,CAAC,CAACf,OAAO,CAAC;AAAC,IAAAW,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}